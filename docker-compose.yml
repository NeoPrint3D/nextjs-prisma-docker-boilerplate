version: '3.8'

services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.nextjs
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    depends_on:
      migrator:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

  database_master:
    image: mysql:8.0.30
    container_name: "database_master"
    ports:
      - "3306:3306"
    volumes:
      - mysqldata_master:/var/lib/mysql
      - ./mysql/scripts/setup-master.sh:/docker-entrypoint-initdb.d/setup-master.sh
    env_file:
      - .env.database
    networks:
      - mynetwork
    command: >
      --default-authentication-plugin=mysql_native_password
      --server-id=1
      --log-bin=mysql-bin
      --binlog_format=ROW
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  database_slave1:
    image: mysql:8.0.30
    container_name: "database_slave1"
    depends_on:
      database_master:
        condition: service_healthy
    ports:
      - "3307:3306"
    volumes:
      - mysqldata_slave1:/var/lib/mysql
      - ./mysql/scripts/setup-slave.sh:/docker-entrypoint-initdb.d/setup-slave.sh
    env_file:
      - .env.database
    networks:
      - mynetwork
    command: >
      --server-id=2
      --default-authentication-plugin=mysql_native_password
      --log_bin=mysql-bin
      --binlog_do_db=my_db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  database_slave2:
    image: mysql:8.0.30
    container_name: "database_slave2"
    depends_on:
      database_master:
        condition: service_healthy
    ports:
      - "3308:3306"
    volumes:
      - mysqldata_slave2:/var/lib/mysql
      - ./mysql/scripts/setup-slave.sh:/docker-entrypoint-initdb.d/setup-slave.sh
    env_file:
      - .env.database
    networks:
      - mynetwork
    command: >
      --server-id=3
      --default-authentication-plugin=mysql_native_password
      --log_bin=mysql-bin
      --binlog_do_db=my_db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    depends_on:
      database_master:
        condition: service_healthy
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  mysqldata_master:
  mysqldata_slave1:
  mysqldata_slave2:
