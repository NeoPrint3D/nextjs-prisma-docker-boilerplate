# Install dependencies only when needed
FROM node:20-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json package-lock.json ./ 
COPY .env.prod .env 
COPY start.sh ./
RUN npm ci

# Rebuild the source code only when needed
FROM node:20-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/.env .env
COPY . .
ENV NEXT_TELEMETRY_DISABLED=1
RUN npx prisma generate        
RUN npm run build

# Production image, copy all the files and run next
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/start.sh ./
COPY --chown=nextjs:nodejs prisma ./prisma/
COPY --chown=nextjs:nodejs --from=builder /app/node_modules ./node_modules
RUN npm i prisma --save
RUN chmod +x ./start.sh
USER nextjs
EXPOSE 3000
CMD ["./start.sh"]
