services:
  database_master:
    image: mysql:8.0.30
    container_name: "database_master"
    # restart: unless-stopped
    ports:
      - 3306:3306
    volumes:
      - mysqldata_master:/var/lib/mysql
      - ./mysql/scripts/setup-master.sh:/docker-entrypoint-initdb.d/setup-master.sh
    environment:
      - MYSQL_ROOT_PASSWORD=S3cret
      - MYSQL_USER=my_db_user
      - MYSQL_DATABASE=my_db
      - MYSQL_PASSWORD=S3cret
    networks:
      - mynetwork
    command: >
      --default-authentication-plugin=mysql_native_password
      --server-id=1
      --log-bin=mysql-bin
      --binlog_format=ROW

  database_slave1:
    image: mysql:8.0.30
    container_name: "database_slave1"
    # restart: unless-stopped
    depends_on:
      - database_master
    ports:
      - 3307:3306
    volumes:
      - mysqldata_slave1:/var/lib/mysql
      - ./mysql/scripts/setup-slave.sh:/docker-entrypoint-initdb.d/setup-slave.sh
    environment:
      - MYSQL_ROOT_PASSWORD=S3cret
      - MYSQL_USER=my_db_user
      - MYSQL_DATABASE=my_db
      - MYSQL_PASSWORD=S3cret
    networks:
      - mynetwork
    command: >
      --server-id=2
      --default-authentication-plugin=mysql_native_password
      --log_bin=mysql-bin
      --binlog_do_db=my_db
  database_slave2:
    image: mysql:8.0.30
    container_name: "database_slave2"
    # restart: unless-stopped
    depends_on:
      - database_master
    ports:
      - 3308:3306
    volumes:
      - mysqldata_slave2:/var/lib/mysql
      - ./mysql/scripts/setup-slave.sh:/docker-entrypoint-initdb.d/setup-slave.sh
    environment:
      - MYSQL_ROOT_PASSWORD=S3cret
      - MYSQL_USER=my_db_user
      - MYSQL_DATABASE=my_db
      - MYSQL_PASSWORD=S3cret
    networks:
      - mynetwork
    command: >
      --server-id=3
      --default-authentication-plugin=mysql_native_password
      --log_bin=mysql-bin
      --binlog_do_db=my_db

networks:
  mynetwork:

volumes:
  mysqldata_master:
  mysqldata_slave1:
  mysqldata_slave2: